/**
 * Count the occurrences of each element inside an array using reduce
 * @params {array}
 * @return {object}
 * Example: 
 * countOccurrences(['a', 'b', 'c', 'b', 'a']) // { a: 2, b: 2, c: 1 };
}
*/

function countOccurrences(arr) {
   let result = arr.reduce((newOb,num)=>{
           if(num in newOb){
              newOb[num]++;
           }else{
              newOb[num] = 1;    
           }
        return newOb;
     },{});
      return result;
}


countOccurrences(['a', 'b', 'c', 'b', 'a']);
//___________________________________________

// Sử dụng sort method để sắp xếp lại 1 array các số sau theo thứ tự tăng dần (descending order)

function sortNumber(arr) {
     return arr.sort((x ,y)=>(x-y));
              
}

//___________________________________________

// Sort an array alphabetically

function alphabetical(arr) {
          arr.sort(function(x ,y ){
                if(x<y){
                    return -1;
                }else 
                 if(x>y)
                  return 1;   
          })
          return arr;
}
alphabetical(["cat", "dog", "bird", "fish", "buffalo", "rabbit", "mouse", "turtle"])
//___________________________________________

// Sort the objects in the array by age

var arr = [
  {
    name: "Quiet Samurai",
    age: 22
  },
  {
    name: "Arrogant Ambassador",
    age: 100
  },
  {
    name: "Misunderstood Observer",
    age: 2
  },
  {
    name: "Unlucky Swami",
    age: 77
  }
];

function byAge(arr){
   
         arr.sort(function(x ,y){
                  if(x.age < y.age){
                     return -1;
                  }else
                   if(x.age > y.age)
                      return 1;     
         })
        return arr;  
}
byAge(arr);
//___________________________________________

/**
 * Dữ liệu sinh viên Coders.Tokyo School là một array các object như sau
 * Viết function trả về 1 array gồm 3 người có điểm cao nhất sắp xếp theo thứ tự điểm giảm dần. 
 * Mục đích để hiển thị lên bảng Leaderboard
 * Gợi ý: sử dụng sort và slice
 */
 
var students = [
  { name: 'A', score: 100 },
  { name: 'B', score: 10 },
  { name: 'C', score: 101 },
  { name: 'D', score: 50 },
  { name: 'E', score: 75 }
];

function getTopStudents(students) {
    return students.sort((x,y)=>(y.score-x.score )).slice(0,3).map(x=>x.name);
}
getTopStudents(students);
//________________________________________________________________________________________________
// Dùng hàm powerup tính bình phương các số chia hết cho 2 trong mảng truyền vào

function powerup(arr) {
   var fix=[];
     for(var x of arr){
            if(x % 2===0){
                fix.push(x*x);
             } else 
                fix.push(x);           
        }
    return fix;
}

powerup([0, 3, 6, 7, 4])
//----------------------------------------
function powerup(arr) {
      var c= arr.map(function(x){
            if(x%2===0)
                 return x*x;
            else
                 return x;     
       });
      return c; 
}
powerup([0, 3, 6, 7, 4])




